<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.pitapany.web.dao.MemberAccompanyInfoDao">
	<select id="getList" resultType="com.pitapany.web.entity.MemberAccompanyInfo">
		SELECT * 
		FROM MemberAccompanyInfo
		WHERE memberId=#{memberId}
		order by cast(id as unsigned) desc 
	</select>

	<select id="get" resultType="com.pitapany.web.entity.MemberAccompanyInfo">
		SELECT *
		FROM
		`pitapanydb`.`MemberAccompanyInfo`
		WHERE id = #{id}
	</select>

	<select id="count" resultType="Integer">
		SELECT count(*) count
		FROM
		`pitapanydb`.`MemberAccompanyInfo`
	</select>
	
	<select id="getListMemberAccompanyMatching" resultType="com.pitapany.web.entity.MemberAccompanyInfoMatchingView">
<![CDATA[
		SELECT  MemberAccompanyInfo.*, Member.age, Member.nicName, Member.sex, MemberProfile.id AS memberProfileId, MemberProfile.imgName, MemberProfile.imgSrc, Member.role,
			(6371*acos(cos(radians(#{param1}))*cos(radians(latitude))*cos(radians(longitude)
			-radians(#{param2}))+sin(radians(#{param1}))*sin(radians(latitude))))
			AS distance
		FROM `pitapanydb`.`MemberAccompanyInfo`
		INNER JOIN 
		Member
		On MemberAccompanyInfo.memberId = Member.id
		INNER JOIN MemberProfile
		On Member.id = MemberProfile.memberId
		WHERE
		MemberAccompanyInfo.id
		NOT IN 
		(SELECT MemberAccompanyInfoId AS id FROM MemberAccompanyMatch WHERE memberId=#{param3})
		AND
		MemberAccompanyInfo.memberId
		NOT IN 
		(SELECT matchedMemberId AS memberId FROM MemberAccompanyMatch WHERE memberId=#{param3})
		AND
		MemberAccompanyInfo.memberId
		NOT IN
		(SELECT id AS memberId FROM Member WHERE id=#{param3})
		AND
		Member.age >= #{param9} AND Member.age <= #{param10}
		AND
		Member.sex ${param7} #{param8}
		AND
		MemberAccompanyInfo.styleId ${param4} #{param5}
		HAVING
		distance<#{param6}
		ORDER BY distance
		LIMIT 0,100;
]]>	
	</select>

	<select id="getMatchedListByMemberId" resultType="com.pitapany.web.entity.MemberProfInfoMatchingResultView">
		SELECT *
		FROM
		`pitapanydb`.`MemberProfInfoMatchingResultView`
		WHERE memberId = #{memberId}
	</select>

	<select id="getMatchingResult" resultType="com.pitapany.web.entity.MemberProfInfoMatchingResultView">
		SELECT *
		FROM MemberProfInfoMatchingResultView
		where id=#{memberAccomInfoId}
	</select>		
		
	<insert id="add" parameterType="com.pitapany.web.entity.MemberAccompanyInfo">
		<selectKey keyProperty="id" order="BEFORE" resultType="String">
			SELECT IFNULL(max(cast(id as unsigned))+1,'1') id FROM MemberAccompanyInfo
		</selectKey>
		INSERT INTO
		`pitapanydb`.`MemberAccompanyInfo`
		(
		`id`,
		`startDate`,
		`endDate`,
		`memberId`,
		`latitude`,
		`longitude`,
		`styleId`,
		`locality`,
		`country`,
		`place`
		)
		VALUES
		(
		#{id},
		#{startDate},
		#{endDate},
		#{memberId},
		#{latitude},
		#{longitude},
		#{styleId},
		#{locality},
		#{country},
		#{place}
		)
	</insert>

	<update id="update" parameterType="com.pitapany.web.entity.MemberAccompanyInfo">
		UPDATE
		`pitapanydb`.`MemberAccompanyInfo`
		SET
		`startDate` = #{startDate},
		`endDate` = #{endDate},
		`memberId` = #{memberId},
		`latitude` = #{latitude},
		`longitude` = #{longitude},
		`styleId` = #{styleId},
		`country` = #{country},
		`locality` = #{locality},
		`place` = #{place}
		WHERE `id` = #{id}
	</update>

	<delete id="delete">
		DELETE FROM MemberAccompanyInfo
		WHERE id = #{id}
	</delete>

</mapper>
