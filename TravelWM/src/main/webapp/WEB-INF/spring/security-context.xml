<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns="http://www.springframework.org/schema/security" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd                
        http://www.springframework.org/schema/security
        http://www.springframework.org/schema/security/spring-security.xsd">

	<beans:bean id="successHandler" class="com.pitapany.web.handler.PitapanySuccessHandler"/>
	
	<!-- id는 real name(중복불가) , name은 별칭 (별칭은 여러 개를 줄 수가 있다, 중복가능) ex) name="a b c" -->

	<!-- <http auto-config="false"> true로 할 경우 모든 인증과 권한을 spring이 담당하게 하겠다. -->
	<http use-expressions="true">
		<form-login login-page="/joinus/login" 
			authentication-failure-url="/joinus/login?e=1"
			authentication-success-handler-ref="successHandler" />
		<logout logout-success-url="/joinus/login"/>
		<intercept-url pattern="/index" access="hasRole('ROLE_USER')"/>
		<intercept-url pattern="/joinus/mypage" access="hasRole('ROLE_USER')" />
		<!-- <intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')" /> -->
		<intercept-url pattern="/member/**" access="hasRole('ROLE_USER')" /> 
		<intercept-url pattern="/community/**" access="hasRole('ROLE_USER')" /> 
		<intercept-url pattern="/profile/**" access="hasRole('ROLE_USER')" /> 
		<intercept-url pattern="/accompany/**" access="hasRole('ROLE_USER')" /> 

        <!-- 30 분간 Session 유지함 ==============>나중에 바꿔주기 -->
		<!-- <session-management  invalid-session-url="/joinus/expiredLogin"> -->
			<!-- max-sessions : 중복 로그인 지정 -->
		<session-management>
            <concurrency-control max-sessions="1"  expired-url="/joinus/duplicated-login" error-if-maximum-exceeded="true" />
        	
        </session-management>
	</http>

	<authentication-manager>
		<authentication-provider>
			<jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="SELECT email userid, password, 1 enabled FROM Member WHERE email=?"
				authorities-by-username-query="SELECT email userid, role authorities FROM Member WHERE email=?"
				
			/>
<!-- 			<user-service>
				<user name="유저" authorities="ROLE_USER"/>
			</user-service> -->
<!--  			<user-service>
				<user name="test@naver.com" password="1111" authorities="ROLE_USER" />
				<user name="SAKURA@naver.com" password="1" authorities="ROLE_USER, ROLE_ADMIN" />
			</user-service> -->
		</authentication-provider>
	</authentication-manager>
</beans:beans>